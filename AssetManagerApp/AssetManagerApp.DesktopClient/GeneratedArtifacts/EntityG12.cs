

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class ServiceContract : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ServiceContract entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ServiceContract()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ServiceContract(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ServiceContract> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ServiceContract.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContract_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContract_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ServiceContract.DetailsClass.SetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContractReference
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ContractReference);
            }
            set
            {
                global::LightSwitchApplication.ServiceContract.DetailsClass.SetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ContractReference, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractReference_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractReference_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractReference_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContractName
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ContractName);
            }
            set
            {
                global::LightSwitchApplication.ServiceContract.DetailsClass.SetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ContractName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContractDescription
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ContractDescription);
            }
            set
            {
                global::LightSwitchApplication.ServiceContract.DetailsClass.SetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ContractDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.StartDate);
            }
            set
            {
                global::LightSwitchApplication.ServiceContract.DetailsClass.SetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.StartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.EndDate);
            }
            set
            {
                global::LightSwitchApplication.ServiceContract.DetailsClass.SetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.EndDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ContractPrice
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ContractPrice);
            }
            set
            {
                global::LightSwitchApplication.ServiceContract.DetailsClass.SetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ContractPrice, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractPrice_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractPrice_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractPrice_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool CurrentContract
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.CurrentContract);
            }
            set
            {
                global::LightSwitchApplication.ServiceContract.DetailsClass.SetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.CurrentContract, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentContract_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentContract_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentContract_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ServiceContract.DetailsClass.SetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.AssetServiceContract> AssetServiceContracts
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.AssetServiceContracts);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.AssetServiceContract> AssetServiceContractsQuery
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetQuery(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.AssetServiceContracts);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ServiceContractSupplier ServiceContractSupplier
        {
            get
            {
                return global::LightSwitchApplication.ServiceContract.DetailsClass.GetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ServiceContractSupplier);
            }
            set
            {
                global::LightSwitchApplication.ServiceContract.DetailsClass.SetValue(this, global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ServiceContractSupplier, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSupplier_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSupplier_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSupplier_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ServiceContract,
                global::LightSwitchApplication.ServiceContract.DetailsClass,
                global::LightSwitchApplication.ServiceContract.DetailsClass.IImplementation,
                global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass>.Entry
                __ServiceContractEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass>.Entry(
                    global::LightSwitchApplication.ServiceContract.DetailsClass.__ServiceContract_CreateNew,
                    global::LightSwitchApplication.ServiceContract.DetailsClass.__ServiceContract_Created,
                    global::LightSwitchApplication.ServiceContract.DetailsClass.__ServiceContract_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ServiceContract __ServiceContract_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ServiceContract> es)
            {
                return new global::LightSwitchApplication.ServiceContract(es);
            }
            private static void __ServiceContract_Created(global::LightSwitchApplication.ServiceContract e)
            {
                e.ServiceContract_Created();
            }
            private static bool __ServiceContract_AllowSaveWithErrors(global::LightSwitchApplication.ServiceContract e)
            {
                bool result = false;
                e.ServiceContract_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string> ContractReference
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ContractReference) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string> ContractName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ContractName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string> ContractDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ContractDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.DateTime> StartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.StartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.DateTime> EndDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.EndDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<decimal>> ContractPrice
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ContractPrice) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, bool> CurrentContract
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.CurrentContract) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::LightSwitchApplication.AssetServiceContract> AssetServiceContracts
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.AssetServiceContracts) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::LightSwitchApplication.AssetServiceContract>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::LightSwitchApplication.ServiceContractSupplier> ServiceContractSupplier
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ServiceContractSupplier) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::LightSwitchApplication.ServiceContractSupplier>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string ContractReference { get; set; }
                new string ContractName { get; set; }
                new string ContractDescription { get; set; }
                new global::System.DateTime StartDate { get; set; }
                new global::System.DateTime EndDate { get; set; }
                new global::System.Nullable<decimal> ContractPrice { get; set; }
                new bool CurrentContract { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::System.Collections.IEnumerable AssetServiceContracts { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ServiceContractSupplier { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, int>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Entry
                    ContractReference = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Entry(
                        "ContractReference",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractReference_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractReference_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractReference_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractReference_GetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractReference_SetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractReference_OnValueChanged);
                private static void _ContractReference_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._ContractReference, sf);
                }
                private static bool _ContractReference_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.ContractReference_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContractReference_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContractReference_Validate(r);
                }
                private static string _ContractReference_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.ContractReference;
                }
                private static void _ContractReference_SetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ContractReference = v;
                }
                private static void _ContractReference_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.ContractReference_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Entry
                    ContractName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Entry(
                        "ContractName",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractName_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractName_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractName_GetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractName_SetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractName_OnValueChanged);
                private static void _ContractName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._ContractName, sf);
                }
                private static bool _ContractName_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.ContractName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContractName_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContractName_Validate(r);
                }
                private static string _ContractName_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.ContractName;
                }
                private static void _ContractName_SetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ContractName = v;
                }
                private static void _ContractName_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.ContractName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Entry
                    ContractDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Entry(
                        "ContractDescription",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractDescription_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractDescription_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractDescription_GetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractDescription_SetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractDescription_OnValueChanged);
                private static void _ContractDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._ContractDescription, sf);
                }
                private static bool _ContractDescription_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.ContractDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContractDescription_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContractDescription_Validate(r);
                }
                private static string _ContractDescription_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.ContractDescription;
                }
                private static void _ContractDescription_SetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ContractDescription = v;
                }
                private static void _ContractDescription_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.ContractDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.DateTime>.Entry
                    StartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.DateTime>.Entry(
                        "StartDate",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._StartDate_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._StartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._StartDate_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._StartDate_GetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._StartDate_SetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._StartDate_OnValueChanged);
                private static void _StartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._StartDate, sf);
                }
                private static bool _StartDate_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.StartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _StartDate_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StartDate_Validate(r);
                }
                private static global::System.DateTime _StartDate_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.StartDate;
                }
                private static void _StartDate_SetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.StartDate = global::LightSwitchApplication.ServiceContract.DetailsClass.TruncateDate(v);
                }
                private static void _StartDate_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.StartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.DateTime>.Entry
                    EndDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.DateTime>.Entry(
                        "EndDate",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._EndDate_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._EndDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._EndDate_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._EndDate_GetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._EndDate_SetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._EndDate_OnValueChanged);
                private static void _EndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._EndDate, sf);
                }
                private static bool _EndDate_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.EndDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _EndDate_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EndDate_Validate(r);
                }
                private static global::System.DateTime _EndDate_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.EndDate;
                }
                private static void _EndDate_SetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.EndDate = global::LightSwitchApplication.ServiceContract.DetailsClass.TruncateDate(v);
                }
                private static void _EndDate_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.EndDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ContractPrice = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ContractPrice",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractPrice_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractPrice_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractPrice_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractPrice_GetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractPrice_SetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ContractPrice_OnValueChanged);
                private static void _ContractPrice_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._ContractPrice, sf);
                }
                private static bool _ContractPrice_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.ContractPrice_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContractPrice_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContractPrice_Validate(r);
                }
                private static global::System.Nullable<decimal> _ContractPrice_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.ContractPrice;
                }
                private static void _ContractPrice_SetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.ContractPrice = v;
                }
                private static void _ContractPrice_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.ContractPrice_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, bool>.Entry
                    CurrentContract = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, bool>.Entry(
                        "CurrentContract",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._CurrentContract_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._CurrentContract_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._CurrentContract_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._CurrentContract_GetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._CurrentContract_SetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._CurrentContract_OnValueChanged);
                private static void _CurrentContract_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, bool>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._CurrentContract, sf);
                }
                private static bool _CurrentContract_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.CurrentContract_IsReadOnly(ref result);
                    return result;
                }
                private static void _CurrentContract_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CurrentContract_Validate(r);
                }
                private static bool _CurrentContract_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.CurrentContract;
                }
                private static void _CurrentContract_SetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.CurrentContract = v;
                }
                private static void _CurrentContract_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.CurrentContract_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::LightSwitchApplication.AssetServiceContract>.Entry
                    AssetServiceContracts = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::LightSwitchApplication.AssetServiceContract>.Entry(
                        "AssetServiceContracts",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._AssetServiceContracts_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._AssetServiceContracts_GetReferencedEntities,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._AssetServiceContracts_GetEntityCollection);
                private static void _AssetServiceContracts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::LightSwitchApplication.AssetServiceContract>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetServiceContracts, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AssetServiceContract> _AssetServiceContracts_GetReferencedEntities(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.AssetServiceContract, global::LightSwitchApplication.AssetServiceContract.DetailsClass>(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.AssetServiceContracts, ref d._AssetServiceContracts);
                }
                private static global::System.Collections.IEnumerable _AssetServiceContracts_GetEntityCollection(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetServiceContracts;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::LightSwitchApplication.ServiceContractSupplier>.Entry
                    ServiceContractSupplier = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::LightSwitchApplication.ServiceContractSupplier>.Entry(
                        "ServiceContractSupplier",
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ServiceContractSupplier_Stub,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ServiceContractSupplier_ComputeIsReadOnly,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ServiceContractSupplier_Validate,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ServiceContractSupplier_GetCoreImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ServiceContractSupplier_GetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ServiceContractSupplier_SetImplementationValue,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ServiceContractSupplier_Refresh,
                        global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties._ServiceContractSupplier_OnValueChanged);
                private static void _ServiceContractSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ServiceContract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::LightSwitchApplication.ServiceContractSupplier>.Data> c, global::LightSwitchApplication.ServiceContract.DetailsClass d, object sf)
                {
                    c(d, ref d._ServiceContractSupplier, sf);
                }
                private static bool _ServiceContractSupplier_ComputeIsReadOnly(global::LightSwitchApplication.ServiceContract e)
                {
                    bool result = false;
                    e.ServiceContractSupplier_IsReadOnly(ref result);
                    return result;
                }
                private static void _ServiceContractSupplier_Validate(global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ServiceContractSupplier_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ServiceContractSupplier_GetCoreImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.ImplementationEntity.ServiceContractSupplier;
                }
                private static global::LightSwitchApplication.ServiceContractSupplier _ServiceContractSupplier_GetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ServiceContractSupplier, global::LightSwitchApplication.ServiceContractSupplier.DetailsClass>(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ServiceContractSupplier, ref d._ServiceContractSupplier);
                }
                private static void _ServiceContractSupplier_SetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass d, global::LightSwitchApplication.ServiceContractSupplier v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ServiceContractSupplier, ref d._ServiceContractSupplier, (i, ev) => i.ServiceContractSupplier = ev, v);
                }
                private static void _ServiceContractSupplier_Refresh(global::LightSwitchApplication.ServiceContract.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ServiceContract.DetailsClass.PropertySetProperties.ServiceContractSupplier, ref d._ServiceContractSupplier);
                }
                private static void _ServiceContractSupplier_OnValueChanged(global::LightSwitchApplication.ServiceContract e)
                {
                    e.ServiceContractSupplier_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Data _ContractReference;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Data _ContractName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Data _ContractDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.DateTime>.Data _StartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.DateTime>.Data _EndDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<decimal>>.Data _ContractPrice;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, bool>.Data _CurrentContract;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::LightSwitchApplication.AssetServiceContract>.Data _AssetServiceContracts;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ServiceContract, global::LightSwitchApplication.ServiceContract.DetailsClass, global::LightSwitchApplication.ServiceContractSupplier>.Data _ServiceContractSupplier;
            
        }
    
        #endregion
    }
    
    #endregion
}
