

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class Asset : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Asset entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Asset()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Asset(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Asset> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Asset.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Asset_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Asset_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Reference
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Reference);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Reference, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reference_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reference_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reference_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AssetDescription
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetDescription);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SerialNumber
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.SerialNumber);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.SerialNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SerialNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SerialNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SerialNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Model
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Model);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Model, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Model_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Model_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Model_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Location
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Location);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Location, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> PurchaseDate
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.PurchaseDate);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.PurchaseDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CommissionDate
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.CommissionDate);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.CommissionDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> IntendedReplacementDate
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.IntendedReplacementDate);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.IntendedReplacementDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IntendedReplacementDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IntendedReplacementDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IntendedReplacementDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool InUse
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.InUse);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.InUse, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InUse_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InUse_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InUse_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateRemovedFromUse
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.DateRemovedFromUse);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.DateRemovedFromUse, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateRemovedFromUse_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateRemovedFromUse_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateRemovedFromUse_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] AssetImage
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetImage);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetImage, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetImage_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetImage_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetImage_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CapitalAssetReference
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.CapitalAssetReference);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.CapitalAssetReference, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CapitalAssetReference_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CapitalAssetReference_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CapitalAssetReference_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> PurchasePrice
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.PurchasePrice);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.PurchasePrice, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchasePrice_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchasePrice_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchasePrice_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> CurrentValue
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.CurrentValue);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.CurrentValue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentValue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentValue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentValue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateCurrentValueEvaluated
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.DateCurrentValueEvaluated);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.DateCurrentValueEvaluated, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCurrentValueEvaluated_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCurrentValueEvaluated_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCurrentValueEvaluated_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo CreatedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.CreatedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo ModifiedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.ModifiedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.AssetComment> AssetComments
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetComments);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.AssetComment> AssetCommentsQuery
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetQuery(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetComments);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.AssetMaintenanceActivity> AssetMaintenanceActivities
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetMaintenanceActivities);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.AssetMaintenanceActivity> AssetMaintenanceActivitiesQuery
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetQuery(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetMaintenanceActivities);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.AssetMaintenanceSchedule> AssetMaintenanceSchedules
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetMaintenanceSchedules);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.AssetMaintenanceSchedule> AssetMaintenanceSchedulesQuery
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetQuery(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetMaintenanceSchedules);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.AssetManufacturer AssetManufacturer
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetManufacturer);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetManufacturer, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturer_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturer_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturer_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.AssetServiceContract> AssetServiceContracts
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetServiceContracts);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.AssetServiceContract> AssetServiceContractsQuery
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetQuery(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetServiceContracts);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.AssetSubscriber> AssetSubscribers
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetSubscribers);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.AssetSubscriber> AssetSubscribersQuery
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetQuery(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetSubscribers);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.AssetSupplier AssetSupplier
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetSupplier);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetSupplier, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSupplier_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSupplier_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSupplier_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.AssetType AssetType
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetType);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetType_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Asset,
                global::LightSwitchApplication.Asset.DetailsClass,
                global::LightSwitchApplication.Asset.DetailsClass.IImplementation,
                global::LightSwitchApplication.Asset.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>.Entry
                __AssetEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>.Entry(
                    global::LightSwitchApplication.Asset.DetailsClass.__Asset_CreateNew,
                    global::LightSwitchApplication.Asset.DetailsClass.__Asset_Created,
                    global::LightSwitchApplication.Asset.DetailsClass.__Asset_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Asset __Asset_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Asset> es)
            {
                return new global::LightSwitchApplication.Asset(es);
            }
            private static void __Asset_Created(global::LightSwitchApplication.Asset e)
            {
                e.Asset_Created();
            }
            private static bool __Asset_AllowSaveWithErrors(global::LightSwitchApplication.Asset e)
            {
                bool result = false;
                e.Asset_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Asset.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string> Reference
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Reference) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string> AssetDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string> SerialNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.SerialNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string> Model
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Model) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string> Location
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Location) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>> PurchaseDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.PurchaseDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>> CommissionDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.CommissionDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>> IntendedReplacementDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.IntendedReplacementDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, bool> InUse
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.InUse) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>> DateRemovedFromUse
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.DateRemovedFromUse) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, byte[]> AssetImage
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetImage) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string> CapitalAssetReference
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.CapitalAssetReference) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<decimal>> PurchasePrice
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.PurchasePrice) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<decimal>> CurrentValue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.CurrentValue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>> DateCurrentValueEvaluated
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.DateCurrentValueEvaluated) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetComment> AssetComments
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetComments) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetComment>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetMaintenanceActivity> AssetMaintenanceActivities
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetMaintenanceActivities) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetMaintenanceActivity>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetMaintenanceSchedule> AssetMaintenanceSchedules
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetMaintenanceSchedules) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetMaintenanceSchedule>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetManufacturer> AssetManufacturer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetManufacturer) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetManufacturer>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetServiceContract> AssetServiceContracts
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetServiceContracts) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetServiceContract>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetSubscriber> AssetSubscribers
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetSubscribers) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetSubscriber>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetSupplier> AssetSupplier
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetSupplier) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetSupplier>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetType> AssetType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetType>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string Reference { get; set; }
                new string AssetDescription { get; set; }
                new string SerialNumber { get; set; }
                new string Model { get; set; }
                new string Location { get; set; }
                new global::System.Nullable<global::System.DateTime> PurchaseDate { get; set; }
                new global::System.Nullable<global::System.DateTime> CommissionDate { get; set; }
                new global::System.Nullable<global::System.DateTime> IntendedReplacementDate { get; set; }
                new bool InUse { get; set; }
                new global::System.Nullable<global::System.DateTime> DateRemovedFromUse { get; set; }
                new byte[] AssetImage { get; set; }
                new string CapitalAssetReference { get; set; }
                new global::System.Nullable<decimal> PurchasePrice { get; set; }
                new global::System.Nullable<decimal> CurrentValue { get; set; }
                new global::System.Nullable<global::System.DateTime> DateCurrentValueEvaluated { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::System.Collections.IEnumerable AssetComments { get; }
                new global::System.Collections.IEnumerable AssetMaintenanceActivities { get; }
                new global::System.Collections.IEnumerable AssetMaintenanceSchedules { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AssetManufacturer { get; set; }
                new global::System.Collections.IEnumerable AssetServiceContracts { get; }
                new global::System.Collections.IEnumerable AssetSubscribers { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AssetSupplier { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AssetType { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, int>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry
                    Reference = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry(
                        "Reference",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Reference_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Reference_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Reference_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Reference_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Reference_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Reference_OnValueChanged);
                private static void _Reference_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._Reference, sf);
                }
                private static bool _Reference_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.Reference_IsReadOnly(ref result);
                    return result;
                }
                private static void _Reference_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Reference_Validate(r);
                }
                private static string _Reference_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.Reference;
                }
                private static void _Reference_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Reference = v;
                }
                private static void _Reference_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.Reference_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry
                    AssetDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry(
                        "AssetDescription",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetDescription_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetDescription_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetDescription_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetDescription_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetDescription_OnValueChanged);
                private static void _AssetDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetDescription, sf);
                }
                private static bool _AssetDescription_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.AssetDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssetDescription_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssetDescription_Validate(r);
                }
                private static string _AssetDescription_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetDescription;
                }
                private static void _AssetDescription_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AssetDescription = v;
                }
                private static void _AssetDescription_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.AssetDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry
                    SerialNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry(
                        "SerialNumber",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._SerialNumber_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._SerialNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._SerialNumber_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._SerialNumber_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._SerialNumber_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._SerialNumber_OnValueChanged);
                private static void _SerialNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._SerialNumber, sf);
                }
                private static bool _SerialNumber_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.SerialNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _SerialNumber_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SerialNumber_Validate(r);
                }
                private static string _SerialNumber_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.SerialNumber;
                }
                private static void _SerialNumber_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SerialNumber = v;
                }
                private static void _SerialNumber_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.SerialNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry
                    Model = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry(
                        "Model",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Model_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Model_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Model_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Model_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Model_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Model_OnValueChanged);
                private static void _Model_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._Model, sf);
                }
                private static bool _Model_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.Model_IsReadOnly(ref result);
                    return result;
                }
                private static void _Model_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Model_Validate(r);
                }
                private static string _Model_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.Model;
                }
                private static void _Model_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Model = v;
                }
                private static void _Model_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.Model_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry
                    Location = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry(
                        "Location",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Location_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Location_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Location_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Location_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Location_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Location_OnValueChanged);
                private static void _Location_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._Location, sf);
                }
                private static bool _Location_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.Location_IsReadOnly(ref result);
                    return result;
                }
                private static void _Location_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Location_Validate(r);
                }
                private static string _Location_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.Location;
                }
                private static void _Location_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Location = v;
                }
                private static void _Location_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.Location_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    PurchaseDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "PurchaseDate",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._PurchaseDate_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._PurchaseDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._PurchaseDate_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._PurchaseDate_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._PurchaseDate_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._PurchaseDate_OnValueChanged);
                private static void _PurchaseDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._PurchaseDate, sf);
                }
                private static bool _PurchaseDate_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.PurchaseDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _PurchaseDate_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PurchaseDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _PurchaseDate_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.PurchaseDate;
                }
                private static void _PurchaseDate_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.PurchaseDate = global::LightSwitchApplication.Asset.DetailsClass.TruncateDate(v);
                }
                private static void _PurchaseDate_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.PurchaseDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CommissionDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CommissionDate",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CommissionDate_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CommissionDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CommissionDate_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CommissionDate_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CommissionDate_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CommissionDate_OnValueChanged);
                private static void _CommissionDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._CommissionDate, sf);
                }
                private static bool _CommissionDate_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.CommissionDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _CommissionDate_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CommissionDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CommissionDate_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.CommissionDate;
                }
                private static void _CommissionDate_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.CommissionDate = global::LightSwitchApplication.Asset.DetailsClass.TruncateDate(v);
                }
                private static void _CommissionDate_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.CommissionDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    IntendedReplacementDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "IntendedReplacementDate",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._IntendedReplacementDate_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._IntendedReplacementDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._IntendedReplacementDate_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._IntendedReplacementDate_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._IntendedReplacementDate_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._IntendedReplacementDate_OnValueChanged);
                private static void _IntendedReplacementDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._IntendedReplacementDate, sf);
                }
                private static bool _IntendedReplacementDate_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.IntendedReplacementDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _IntendedReplacementDate_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IntendedReplacementDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _IntendedReplacementDate_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.IntendedReplacementDate;
                }
                private static void _IntendedReplacementDate_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.IntendedReplacementDate = global::LightSwitchApplication.Asset.DetailsClass.TruncateDate(v);
                }
                private static void _IntendedReplacementDate_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.IntendedReplacementDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, bool>.Entry
                    InUse = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, bool>.Entry(
                        "InUse",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InUse_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InUse_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InUse_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InUse_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InUse_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InUse_OnValueChanged);
                private static void _InUse_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._InUse, sf);
                }
                private static bool _InUse_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.InUse_IsReadOnly(ref result);
                    return result;
                }
                private static void _InUse_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.InUse_Validate(r);
                }
                private static bool _InUse_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.InUse;
                }
                private static void _InUse_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.InUse = v;
                }
                private static void _InUse_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.InUse_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateRemovedFromUse = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateRemovedFromUse",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._DateRemovedFromUse_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._DateRemovedFromUse_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._DateRemovedFromUse_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._DateRemovedFromUse_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._DateRemovedFromUse_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._DateRemovedFromUse_OnValueChanged);
                private static void _DateRemovedFromUse_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._DateRemovedFromUse, sf);
                }
                private static bool _DateRemovedFromUse_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.DateRemovedFromUse_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateRemovedFromUse_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateRemovedFromUse_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateRemovedFromUse_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.DateRemovedFromUse;
                }
                private static void _DateRemovedFromUse_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateRemovedFromUse = global::LightSwitchApplication.Asset.DetailsClass.TruncateDate(v);
                }
                private static void _DateRemovedFromUse_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.DateRemovedFromUse_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, byte[]>.Entry
                    AssetImage = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, byte[]>.Entry(
                        "AssetImage",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetImage_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetImage_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetImage_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetImage_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetImage_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetImage_OnValueChanged);
                private static void _AssetImage_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetImage, sf);
                }
                private static bool _AssetImage_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.AssetImage_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssetImage_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssetImage_Validate(r);
                }
                private static byte[] _AssetImage_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetImage;
                }
                private static void _AssetImage_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.AssetImage = v;
                }
                private static void _AssetImage_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.AssetImage_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry
                    CapitalAssetReference = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry(
                        "CapitalAssetReference",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CapitalAssetReference_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CapitalAssetReference_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CapitalAssetReference_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CapitalAssetReference_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CapitalAssetReference_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CapitalAssetReference_OnValueChanged);
                private static void _CapitalAssetReference_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._CapitalAssetReference, sf);
                }
                private static bool _CapitalAssetReference_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.CapitalAssetReference_IsReadOnly(ref result);
                    return result;
                }
                private static void _CapitalAssetReference_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CapitalAssetReference_Validate(r);
                }
                private static string _CapitalAssetReference_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.CapitalAssetReference;
                }
                private static void _CapitalAssetReference_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CapitalAssetReference = v;
                }
                private static void _CapitalAssetReference_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.CapitalAssetReference_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<decimal>>.Entry
                    PurchasePrice = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "PurchasePrice",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._PurchasePrice_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._PurchasePrice_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._PurchasePrice_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._PurchasePrice_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._PurchasePrice_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._PurchasePrice_OnValueChanged);
                private static void _PurchasePrice_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._PurchasePrice, sf);
                }
                private static bool _PurchasePrice_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.PurchasePrice_IsReadOnly(ref result);
                    return result;
                }
                private static void _PurchasePrice_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PurchasePrice_Validate(r);
                }
                private static global::System.Nullable<decimal> _PurchasePrice_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.PurchasePrice;
                }
                private static void _PurchasePrice_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.PurchasePrice = v;
                }
                private static void _PurchasePrice_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.PurchasePrice_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<decimal>>.Entry
                    CurrentValue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "CurrentValue",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CurrentValue_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CurrentValue_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CurrentValue_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CurrentValue_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CurrentValue_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CurrentValue_OnValueChanged);
                private static void _CurrentValue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._CurrentValue, sf);
                }
                private static bool _CurrentValue_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.CurrentValue_IsReadOnly(ref result);
                    return result;
                }
                private static void _CurrentValue_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CurrentValue_Validate(r);
                }
                private static global::System.Nullable<decimal> _CurrentValue_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.CurrentValue;
                }
                private static void _CurrentValue_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.CurrentValue = v;
                }
                private static void _CurrentValue_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.CurrentValue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateCurrentValueEvaluated = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateCurrentValueEvaluated",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._DateCurrentValueEvaluated_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._DateCurrentValueEvaluated_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._DateCurrentValueEvaluated_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._DateCurrentValueEvaluated_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._DateCurrentValueEvaluated_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._DateCurrentValueEvaluated_OnValueChanged);
                private static void _DateCurrentValueEvaluated_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._DateCurrentValueEvaluated, sf);
                }
                private static bool _DateCurrentValueEvaluated_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.DateCurrentValueEvaluated_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateCurrentValueEvaluated_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateCurrentValueEvaluated_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateCurrentValueEvaluated_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.DateCurrentValueEvaluated;
                }
                private static void _DateCurrentValueEvaluated_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateCurrentValueEvaluated = global::LightSwitchApplication.Asset.DetailsClass.TruncateDate(v);
                }
                private static void _DateCurrentValueEvaluated_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.DateCurrentValueEvaluated_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetComment>.Entry
                    AssetComments = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetComment>.Entry(
                        "AssetComments",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetComments_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetComments_GetReferencedEntities,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetComments_GetEntityCollection);
                private static void _AssetComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetComment>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetComments, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AssetComment> _AssetComments_GetReferencedEntities(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.AssetComment, global::LightSwitchApplication.AssetComment.DetailsClass>(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetComments, ref d._AssetComments);
                }
                private static global::System.Collections.IEnumerable _AssetComments_GetEntityCollection(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetComments;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetMaintenanceActivity>.Entry
                    AssetMaintenanceActivities = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetMaintenanceActivity>.Entry(
                        "AssetMaintenanceActivities",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetMaintenanceActivities_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetMaintenanceActivities_GetReferencedEntities,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetMaintenanceActivities_GetEntityCollection);
                private static void _AssetMaintenanceActivities_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetMaintenanceActivity>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetMaintenanceActivities, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AssetMaintenanceActivity> _AssetMaintenanceActivities_GetReferencedEntities(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.AssetMaintenanceActivity, global::LightSwitchApplication.AssetMaintenanceActivity.DetailsClass>(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetMaintenanceActivities, ref d._AssetMaintenanceActivities);
                }
                private static global::System.Collections.IEnumerable _AssetMaintenanceActivities_GetEntityCollection(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetMaintenanceActivities;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetMaintenanceSchedule>.Entry
                    AssetMaintenanceSchedules = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetMaintenanceSchedule>.Entry(
                        "AssetMaintenanceSchedules",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetMaintenanceSchedules_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetMaintenanceSchedules_GetReferencedEntities,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetMaintenanceSchedules_GetEntityCollection);
                private static void _AssetMaintenanceSchedules_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetMaintenanceSchedule>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetMaintenanceSchedules, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AssetMaintenanceSchedule> _AssetMaintenanceSchedules_GetReferencedEntities(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.AssetMaintenanceSchedule, global::LightSwitchApplication.AssetMaintenanceSchedule.DetailsClass>(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetMaintenanceSchedules, ref d._AssetMaintenanceSchedules);
                }
                private static global::System.Collections.IEnumerable _AssetMaintenanceSchedules_GetEntityCollection(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetMaintenanceSchedules;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetManufacturer>.Entry
                    AssetManufacturer = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetManufacturer>.Entry(
                        "AssetManufacturer",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetManufacturer_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetManufacturer_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetManufacturer_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetManufacturer_GetCoreImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetManufacturer_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetManufacturer_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetManufacturer_Refresh,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetManufacturer_OnValueChanged);
                private static void _AssetManufacturer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetManufacturer>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetManufacturer, sf);
                }
                private static bool _AssetManufacturer_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.AssetManufacturer_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssetManufacturer_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssetManufacturer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AssetManufacturer_GetCoreImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetManufacturer;
                }
                private static global::LightSwitchApplication.AssetManufacturer _AssetManufacturer_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.AssetManufacturer, global::LightSwitchApplication.AssetManufacturer.DetailsClass>(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetManufacturer, ref d._AssetManufacturer);
                }
                private static void _AssetManufacturer_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::LightSwitchApplication.AssetManufacturer v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetManufacturer, ref d._AssetManufacturer, (i, ev) => i.AssetManufacturer = ev, v);
                }
                private static void _AssetManufacturer_Refresh(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetManufacturer, ref d._AssetManufacturer);
                }
                private static void _AssetManufacturer_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.AssetManufacturer_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetServiceContract>.Entry
                    AssetServiceContracts = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetServiceContract>.Entry(
                        "AssetServiceContracts",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetServiceContracts_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetServiceContracts_GetReferencedEntities,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetServiceContracts_GetEntityCollection);
                private static void _AssetServiceContracts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetServiceContract>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetServiceContracts, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AssetServiceContract> _AssetServiceContracts_GetReferencedEntities(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.AssetServiceContract, global::LightSwitchApplication.AssetServiceContract.DetailsClass>(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetServiceContracts, ref d._AssetServiceContracts);
                }
                private static global::System.Collections.IEnumerable _AssetServiceContracts_GetEntityCollection(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetServiceContracts;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetSubscriber>.Entry
                    AssetSubscribers = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetSubscriber>.Entry(
                        "AssetSubscribers",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetSubscribers_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetSubscribers_GetReferencedEntities,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetSubscribers_GetEntityCollection);
                private static void _AssetSubscribers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetSubscriber>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetSubscribers, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AssetSubscriber> _AssetSubscribers_GetReferencedEntities(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.AssetSubscriber, global::LightSwitchApplication.AssetSubscriber.DetailsClass>(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetSubscribers, ref d._AssetSubscribers);
                }
                private static global::System.Collections.IEnumerable _AssetSubscribers_GetEntityCollection(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetSubscribers;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetSupplier>.Entry
                    AssetSupplier = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetSupplier>.Entry(
                        "AssetSupplier",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetSupplier_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetSupplier_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetSupplier_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetSupplier_GetCoreImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetSupplier_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetSupplier_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetSupplier_Refresh,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetSupplier_OnValueChanged);
                private static void _AssetSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetSupplier>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetSupplier, sf);
                }
                private static bool _AssetSupplier_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.AssetSupplier_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssetSupplier_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssetSupplier_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AssetSupplier_GetCoreImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetSupplier;
                }
                private static global::LightSwitchApplication.AssetSupplier _AssetSupplier_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.AssetSupplier, global::LightSwitchApplication.AssetSupplier.DetailsClass>(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetSupplier, ref d._AssetSupplier);
                }
                private static void _AssetSupplier_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::LightSwitchApplication.AssetSupplier v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetSupplier, ref d._AssetSupplier, (i, ev) => i.AssetSupplier = ev, v);
                }
                private static void _AssetSupplier_Refresh(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetSupplier, ref d._AssetSupplier);
                }
                private static void _AssetSupplier_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.AssetSupplier_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetType>.Entry
                    AssetType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetType>.Entry(
                        "AssetType",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetType_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetType_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetType_GetCoreImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetType_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetType_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetType_Refresh,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetType_OnValueChanged);
                private static void _AssetType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetType>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetType, sf);
                }
                private static bool _AssetType_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.AssetType_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssetType_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssetType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AssetType_GetCoreImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetType;
                }
                private static global::LightSwitchApplication.AssetType _AssetType_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.AssetType, global::LightSwitchApplication.AssetType.DetailsClass>(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetType, ref d._AssetType);
                }
                private static void _AssetType_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::LightSwitchApplication.AssetType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetType, ref d._AssetType, (i, ev) => i.AssetType = ev, v);
                }
                private static void _AssetType_Refresh(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetType, ref d._AssetType);
                }
                private static void _AssetType_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.AssetType_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data _Reference;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data _AssetDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data _SerialNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data _Model;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data _Location;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _PurchaseDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CommissionDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _IntendedReplacementDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, bool>.Data _InUse;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateRemovedFromUse;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, byte[]>.Data _AssetImage;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data _CapitalAssetReference;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<decimal>>.Data _PurchasePrice;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<decimal>>.Data _CurrentValue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateCurrentValueEvaluated;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetComment>.Data _AssetComments;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetMaintenanceActivity>.Data _AssetMaintenanceActivities;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetMaintenanceSchedule>.Data _AssetMaintenanceSchedules;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetManufacturer>.Data _AssetManufacturer;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetServiceContract>.Data _AssetServiceContracts;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetSubscriber>.Data _AssetSubscribers;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetSupplier>.Data _AssetSupplier;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetType>.Data _AssetType;
            
        }
    
        #endregion
    }
    
    #endregion
}
