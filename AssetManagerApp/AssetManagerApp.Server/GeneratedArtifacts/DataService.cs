//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetComments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetComments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetComments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetComments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetComments_Inserting(global::LightSwitchApplication.AssetComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetComments_Inserted(global::LightSwitchApplication.AssetComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetComments_Updating(global::LightSwitchApplication.AssetComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetComments_Updated(global::LightSwitchApplication.AssetComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetComments_Deleting(global::LightSwitchApplication.AssetComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetComments_Deleted(global::LightSwitchApplication.AssetComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetComments_Validate(global::LightSwitchApplication.AssetComment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetComments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetComment, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceActivities_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceActivities_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceActivities_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceActivities_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceActivities_Inserting(global::LightSwitchApplication.AssetMaintenanceActivity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceActivities_Inserted(global::LightSwitchApplication.AssetMaintenanceActivity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceActivities_Updating(global::LightSwitchApplication.AssetMaintenanceActivity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceActivities_Updated(global::LightSwitchApplication.AssetMaintenanceActivity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceActivities_Deleting(global::LightSwitchApplication.AssetMaintenanceActivity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceActivities_Deleted(global::LightSwitchApplication.AssetMaintenanceActivity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceActivities_Validate(global::LightSwitchApplication.AssetMaintenanceActivity entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceActivities_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetMaintenanceActivity, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceSchedules_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceSchedules_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceSchedules_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceSchedules_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceSchedules_Inserting(global::LightSwitchApplication.AssetMaintenanceSchedule entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceSchedules_Inserted(global::LightSwitchApplication.AssetMaintenanceSchedule entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceSchedules_Updating(global::LightSwitchApplication.AssetMaintenanceSchedule entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceSchedules_Updated(global::LightSwitchApplication.AssetMaintenanceSchedule entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceSchedules_Deleting(global::LightSwitchApplication.AssetMaintenanceSchedule entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceSchedules_Deleted(global::LightSwitchApplication.AssetMaintenanceSchedule entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceSchedules_Validate(global::LightSwitchApplication.AssetMaintenanceSchedule entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceSchedules_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetMaintenanceSchedule, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceTypes_Inserting(global::LightSwitchApplication.AssetMaintenanceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceTypes_Inserted(global::LightSwitchApplication.AssetMaintenanceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceTypes_Updating(global::LightSwitchApplication.AssetMaintenanceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceTypes_Updated(global::LightSwitchApplication.AssetMaintenanceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceTypes_Deleting(global::LightSwitchApplication.AssetMaintenanceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceTypes_Deleted(global::LightSwitchApplication.AssetMaintenanceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceTypes_Validate(global::LightSwitchApplication.AssetMaintenanceType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetMaintenanceTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetMaintenanceType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturers_Inserting(global::LightSwitchApplication.AssetManufacturer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturers_Inserted(global::LightSwitchApplication.AssetManufacturer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturers_Updating(global::LightSwitchApplication.AssetManufacturer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturers_Updated(global::LightSwitchApplication.AssetManufacturer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturers_Deleting(global::LightSwitchApplication.AssetManufacturer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturers_Deleted(global::LightSwitchApplication.AssetManufacturer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturers_Validate(global::LightSwitchApplication.AssetManufacturer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetManufacturers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetManufacturer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Inserting(global::LightSwitchApplication.Asset entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Inserted(global::LightSwitchApplication.Asset entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Updating(global::LightSwitchApplication.Asset entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Updated(global::LightSwitchApplication.Asset entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Deleting(global::LightSwitchApplication.Asset entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Deleted(global::LightSwitchApplication.Asset entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Validate(global::LightSwitchApplication.Asset entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Asset, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetServiceContracts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetServiceContracts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetServiceContracts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetServiceContracts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetServiceContracts_Inserting(global::LightSwitchApplication.AssetServiceContract entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetServiceContracts_Inserted(global::LightSwitchApplication.AssetServiceContract entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetServiceContracts_Updating(global::LightSwitchApplication.AssetServiceContract entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetServiceContracts_Updated(global::LightSwitchApplication.AssetServiceContract entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetServiceContracts_Deleting(global::LightSwitchApplication.AssetServiceContract entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetServiceContracts_Deleted(global::LightSwitchApplication.AssetServiceContract entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetServiceContracts_Validate(global::LightSwitchApplication.AssetServiceContract entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetServiceContracts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetServiceContract, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSubscribers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSubscribers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSubscribers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSubscribers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSubscribers_Inserting(global::LightSwitchApplication.AssetSubscriber entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSubscribers_Inserted(global::LightSwitchApplication.AssetSubscriber entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSubscribers_Updating(global::LightSwitchApplication.AssetSubscriber entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSubscribers_Updated(global::LightSwitchApplication.AssetSubscriber entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSubscribers_Deleting(global::LightSwitchApplication.AssetSubscriber entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSubscribers_Deleted(global::LightSwitchApplication.AssetSubscriber entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSubscribers_Validate(global::LightSwitchApplication.AssetSubscriber entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSubscribers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetSubscriber, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSuppliers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSuppliers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSuppliers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSuppliers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSuppliers_Inserting(global::LightSwitchApplication.AssetSupplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSuppliers_Inserted(global::LightSwitchApplication.AssetSupplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSuppliers_Updating(global::LightSwitchApplication.AssetSupplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSuppliers_Updated(global::LightSwitchApplication.AssetSupplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSuppliers_Deleting(global::LightSwitchApplication.AssetSupplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSuppliers_Deleted(global::LightSwitchApplication.AssetSupplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSuppliers_Validate(global::LightSwitchApplication.AssetSupplier entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetSuppliers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetSupplier, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetTypes_Inserting(global::LightSwitchApplication.AssetType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetTypes_Inserted(global::LightSwitchApplication.AssetType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetTypes_Updating(global::LightSwitchApplication.AssetType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetTypes_Updated(global::LightSwitchApplication.AssetType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetTypes_Deleting(global::LightSwitchApplication.AssetType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetTypes_Deleted(global::LightSwitchApplication.AssetType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetTypes_Validate(global::LightSwitchApplication.AssetType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updating(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updated(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::LightSwitchApplication.Employee entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContracts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContracts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContracts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContracts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContracts_Inserting(global::LightSwitchApplication.ServiceContract entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContracts_Inserted(global::LightSwitchApplication.ServiceContract entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContracts_Updating(global::LightSwitchApplication.ServiceContract entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContracts_Updated(global::LightSwitchApplication.ServiceContract entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContracts_Deleting(global::LightSwitchApplication.ServiceContract entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContracts_Deleted(global::LightSwitchApplication.ServiceContract entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContracts_Validate(global::LightSwitchApplication.ServiceContract entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContracts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ServiceContract, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSuppliers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSuppliers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSuppliers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSuppliers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSuppliers_Inserting(global::LightSwitchApplication.ServiceContractSupplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSuppliers_Inserted(global::LightSwitchApplication.ServiceContractSupplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSuppliers_Updating(global::LightSwitchApplication.ServiceContractSupplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSuppliers_Updated(global::LightSwitchApplication.ServiceContractSupplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSuppliers_Deleting(global::LightSwitchApplication.ServiceContractSupplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSuppliers_Deleted(global::LightSwitchApplication.ServiceContractSupplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSuppliers_Validate(global::LightSwitchApplication.ServiceContractSupplier entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceContractSuppliers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ServiceContractSupplier, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetComment>
                __AssetCommentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetComment>(
                    "AssetComments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetComments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetComments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetComments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetComments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetComments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetComments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetComments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetComments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetComments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetComments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetComments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetComments_Filter);
            private static bool __AssetComments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetComments_CanInsert(ref result);
                return result;
            }
            private static bool __AssetComments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetComments_CanUpdate(ref result);
                return result;
            }
            private static bool __AssetComments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetComments_CanDelete(ref result);
                return result;
            }
            private static bool __AssetComments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetComments_CanRead(ref result);
                return result;
            }
            private static void __AssetComments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetComment e)
            {
                d.AssetComments_Inserting(e);
            }
            private static void __AssetComments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetComment e)
            {
                d.AssetComments_Inserted(e);
            }
            private static void __AssetComments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetComment e)
            {
                d.AssetComments_Updating(e);
            }
            private static void __AssetComments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetComment e)
            {
                d.AssetComments_Updated(e);
            }
            private static void __AssetComments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetComment e)
            {
                d.AssetComments_Deleting(e);
            }
            private static void __AssetComments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetComment e)
            {
                d.AssetComments_Deleted(e);
            }
            private static void __AssetComments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetComment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AssetComments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetComment, bool>> __AssetComments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetComment, bool>> filter = null;
                d.AssetComments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetMaintenanceActivity>
                __AssetMaintenanceActivitiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetMaintenanceActivity>(
                    "AssetMaintenanceActivities",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceActivities_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceActivities_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceActivities_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceActivities_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceActivities_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceActivities_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceActivities_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceActivities_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceActivities_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceActivities_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceActivities_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceActivities_Filter);
            private static bool __AssetMaintenanceActivities_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetMaintenanceActivities_CanInsert(ref result);
                return result;
            }
            private static bool __AssetMaintenanceActivities_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetMaintenanceActivities_CanUpdate(ref result);
                return result;
            }
            private static bool __AssetMaintenanceActivities_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetMaintenanceActivities_CanDelete(ref result);
                return result;
            }
            private static bool __AssetMaintenanceActivities_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetMaintenanceActivities_CanRead(ref result);
                return result;
            }
            private static void __AssetMaintenanceActivities_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceActivity e)
            {
                d.AssetMaintenanceActivities_Inserting(e);
            }
            private static void __AssetMaintenanceActivities_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceActivity e)
            {
                d.AssetMaintenanceActivities_Inserted(e);
            }
            private static void __AssetMaintenanceActivities_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceActivity e)
            {
                d.AssetMaintenanceActivities_Updating(e);
            }
            private static void __AssetMaintenanceActivities_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceActivity e)
            {
                d.AssetMaintenanceActivities_Updated(e);
            }
            private static void __AssetMaintenanceActivities_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceActivity e)
            {
                d.AssetMaintenanceActivities_Deleting(e);
            }
            private static void __AssetMaintenanceActivities_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceActivity e)
            {
                d.AssetMaintenanceActivities_Deleted(e);
            }
            private static void __AssetMaintenanceActivities_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceActivity e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AssetMaintenanceActivities_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetMaintenanceActivity, bool>> __AssetMaintenanceActivities_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetMaintenanceActivity, bool>> filter = null;
                d.AssetMaintenanceActivities_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetMaintenanceSchedule>
                __AssetMaintenanceSchedulesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetMaintenanceSchedule>(
                    "AssetMaintenanceSchedules",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceSchedules_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceSchedules_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceSchedules_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceSchedules_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceSchedules_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceSchedules_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceSchedules_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceSchedules_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceSchedules_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceSchedules_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceSchedules_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceSchedules_Filter);
            private static bool __AssetMaintenanceSchedules_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetMaintenanceSchedules_CanInsert(ref result);
                return result;
            }
            private static bool __AssetMaintenanceSchedules_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetMaintenanceSchedules_CanUpdate(ref result);
                return result;
            }
            private static bool __AssetMaintenanceSchedules_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetMaintenanceSchedules_CanDelete(ref result);
                return result;
            }
            private static bool __AssetMaintenanceSchedules_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetMaintenanceSchedules_CanRead(ref result);
                return result;
            }
            private static void __AssetMaintenanceSchedules_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceSchedule e)
            {
                d.AssetMaintenanceSchedules_Inserting(e);
            }
            private static void __AssetMaintenanceSchedules_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceSchedule e)
            {
                d.AssetMaintenanceSchedules_Inserted(e);
            }
            private static void __AssetMaintenanceSchedules_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceSchedule e)
            {
                d.AssetMaintenanceSchedules_Updating(e);
            }
            private static void __AssetMaintenanceSchedules_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceSchedule e)
            {
                d.AssetMaintenanceSchedules_Updated(e);
            }
            private static void __AssetMaintenanceSchedules_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceSchedule e)
            {
                d.AssetMaintenanceSchedules_Deleting(e);
            }
            private static void __AssetMaintenanceSchedules_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceSchedule e)
            {
                d.AssetMaintenanceSchedules_Deleted(e);
            }
            private static void __AssetMaintenanceSchedules_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceSchedule e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AssetMaintenanceSchedules_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetMaintenanceSchedule, bool>> __AssetMaintenanceSchedules_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetMaintenanceSchedule, bool>> filter = null;
                d.AssetMaintenanceSchedules_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetMaintenanceType>
                __AssetMaintenanceTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetMaintenanceType>(
                    "AssetMaintenanceTypes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceTypes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceTypes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceTypes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceTypes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceTypes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceTypes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceTypes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceTypes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceTypes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceTypes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceTypes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetMaintenanceTypes_Filter);
            private static bool __AssetMaintenanceTypes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetMaintenanceTypes_CanInsert(ref result);
                return result;
            }
            private static bool __AssetMaintenanceTypes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetMaintenanceTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __AssetMaintenanceTypes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetMaintenanceTypes_CanDelete(ref result);
                return result;
            }
            private static bool __AssetMaintenanceTypes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetMaintenanceTypes_CanRead(ref result);
                return result;
            }
            private static void __AssetMaintenanceTypes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceType e)
            {
                d.AssetMaintenanceTypes_Inserting(e);
            }
            private static void __AssetMaintenanceTypes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceType e)
            {
                d.AssetMaintenanceTypes_Inserted(e);
            }
            private static void __AssetMaintenanceTypes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceType e)
            {
                d.AssetMaintenanceTypes_Updating(e);
            }
            private static void __AssetMaintenanceTypes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceType e)
            {
                d.AssetMaintenanceTypes_Updated(e);
            }
            private static void __AssetMaintenanceTypes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceType e)
            {
                d.AssetMaintenanceTypes_Deleting(e);
            }
            private static void __AssetMaintenanceTypes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceType e)
            {
                d.AssetMaintenanceTypes_Deleted(e);
            }
            private static void __AssetMaintenanceTypes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetMaintenanceType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AssetMaintenanceTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetMaintenanceType, bool>> __AssetMaintenanceTypes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetMaintenanceType, bool>> filter = null;
                d.AssetMaintenanceTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetManufacturer>
                __AssetManufacturersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetManufacturer>(
                    "AssetManufacturers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetManufacturers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetManufacturers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetManufacturers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetManufacturers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetManufacturers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetManufacturers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetManufacturers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetManufacturers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetManufacturers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetManufacturers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetManufacturers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetManufacturers_Filter);
            private static bool __AssetManufacturers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetManufacturers_CanInsert(ref result);
                return result;
            }
            private static bool __AssetManufacturers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetManufacturers_CanUpdate(ref result);
                return result;
            }
            private static bool __AssetManufacturers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetManufacturers_CanDelete(ref result);
                return result;
            }
            private static bool __AssetManufacturers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetManufacturers_CanRead(ref result);
                return result;
            }
            private static void __AssetManufacturers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetManufacturer e)
            {
                d.AssetManufacturers_Inserting(e);
            }
            private static void __AssetManufacturers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetManufacturer e)
            {
                d.AssetManufacturers_Inserted(e);
            }
            private static void __AssetManufacturers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetManufacturer e)
            {
                d.AssetManufacturers_Updating(e);
            }
            private static void __AssetManufacturers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetManufacturer e)
            {
                d.AssetManufacturers_Updated(e);
            }
            private static void __AssetManufacturers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetManufacturer e)
            {
                d.AssetManufacturers_Deleting(e);
            }
            private static void __AssetManufacturers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetManufacturer e)
            {
                d.AssetManufacturers_Deleted(e);
            }
            private static void __AssetManufacturers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetManufacturer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AssetManufacturers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetManufacturer, bool>> __AssetManufacturers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetManufacturer, bool>> filter = null;
                d.AssetManufacturers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Asset>
                __AssetsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Asset>(
                    "Assets",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Assets_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Assets_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Assets_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Assets_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Assets_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Assets_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Assets_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Assets_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Assets_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Assets_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Assets_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Assets_Filter);
            private static bool __Assets_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Assets_CanInsert(ref result);
                return result;
            }
            private static bool __Assets_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Assets_CanUpdate(ref result);
                return result;
            }
            private static bool __Assets_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Assets_CanDelete(ref result);
                return result;
            }
            private static bool __Assets_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Assets_CanRead(ref result);
                return result;
            }
            private static void __Assets_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Asset e)
            {
                d.Assets_Inserting(e);
            }
            private static void __Assets_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Asset e)
            {
                d.Assets_Inserted(e);
            }
            private static void __Assets_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Asset e)
            {
                d.Assets_Updating(e);
            }
            private static void __Assets_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Asset e)
            {
                d.Assets_Updated(e);
            }
            private static void __Assets_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Asset e)
            {
                d.Assets_Deleting(e);
            }
            private static void __Assets_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Asset e)
            {
                d.Assets_Deleted(e);
            }
            private static void __Assets_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Assets_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Asset, bool>> __Assets_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Asset, bool>> filter = null;
                d.Assets_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetServiceContract>
                __AssetServiceContractsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetServiceContract>(
                    "AssetServiceContracts",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetServiceContracts_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetServiceContracts_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetServiceContracts_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetServiceContracts_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetServiceContracts_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetServiceContracts_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetServiceContracts_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetServiceContracts_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetServiceContracts_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetServiceContracts_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetServiceContracts_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetServiceContracts_Filter);
            private static bool __AssetServiceContracts_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetServiceContracts_CanInsert(ref result);
                return result;
            }
            private static bool __AssetServiceContracts_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetServiceContracts_CanUpdate(ref result);
                return result;
            }
            private static bool __AssetServiceContracts_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetServiceContracts_CanDelete(ref result);
                return result;
            }
            private static bool __AssetServiceContracts_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetServiceContracts_CanRead(ref result);
                return result;
            }
            private static void __AssetServiceContracts_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetServiceContract e)
            {
                d.AssetServiceContracts_Inserting(e);
            }
            private static void __AssetServiceContracts_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetServiceContract e)
            {
                d.AssetServiceContracts_Inserted(e);
            }
            private static void __AssetServiceContracts_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetServiceContract e)
            {
                d.AssetServiceContracts_Updating(e);
            }
            private static void __AssetServiceContracts_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetServiceContract e)
            {
                d.AssetServiceContracts_Updated(e);
            }
            private static void __AssetServiceContracts_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetServiceContract e)
            {
                d.AssetServiceContracts_Deleting(e);
            }
            private static void __AssetServiceContracts_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetServiceContract e)
            {
                d.AssetServiceContracts_Deleted(e);
            }
            private static void __AssetServiceContracts_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetServiceContract e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AssetServiceContracts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetServiceContract, bool>> __AssetServiceContracts_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetServiceContract, bool>> filter = null;
                d.AssetServiceContracts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetSubscriber>
                __AssetSubscribersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetSubscriber>(
                    "AssetSubscribers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSubscribers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSubscribers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSubscribers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSubscribers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSubscribers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSubscribers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSubscribers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSubscribers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSubscribers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSubscribers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSubscribers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSubscribers_Filter);
            private static bool __AssetSubscribers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetSubscribers_CanInsert(ref result);
                return result;
            }
            private static bool __AssetSubscribers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetSubscribers_CanUpdate(ref result);
                return result;
            }
            private static bool __AssetSubscribers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetSubscribers_CanDelete(ref result);
                return result;
            }
            private static bool __AssetSubscribers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetSubscribers_CanRead(ref result);
                return result;
            }
            private static void __AssetSubscribers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSubscriber e)
            {
                d.AssetSubscribers_Inserting(e);
            }
            private static void __AssetSubscribers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSubscriber e)
            {
                d.AssetSubscribers_Inserted(e);
            }
            private static void __AssetSubscribers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSubscriber e)
            {
                d.AssetSubscribers_Updating(e);
            }
            private static void __AssetSubscribers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSubscriber e)
            {
                d.AssetSubscribers_Updated(e);
            }
            private static void __AssetSubscribers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSubscriber e)
            {
                d.AssetSubscribers_Deleting(e);
            }
            private static void __AssetSubscribers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSubscriber e)
            {
                d.AssetSubscribers_Deleted(e);
            }
            private static void __AssetSubscribers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSubscriber e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AssetSubscribers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetSubscriber, bool>> __AssetSubscribers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetSubscriber, bool>> filter = null;
                d.AssetSubscribers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetSupplier>
                __AssetSuppliersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetSupplier>(
                    "AssetSuppliers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSuppliers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSuppliers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSuppliers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSuppliers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSuppliers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSuppliers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSuppliers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSuppliers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSuppliers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSuppliers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSuppliers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetSuppliers_Filter);
            private static bool __AssetSuppliers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetSuppliers_CanInsert(ref result);
                return result;
            }
            private static bool __AssetSuppliers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetSuppliers_CanUpdate(ref result);
                return result;
            }
            private static bool __AssetSuppliers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetSuppliers_CanDelete(ref result);
                return result;
            }
            private static bool __AssetSuppliers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetSuppliers_CanRead(ref result);
                return result;
            }
            private static void __AssetSuppliers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSupplier e)
            {
                d.AssetSuppliers_Inserting(e);
            }
            private static void __AssetSuppliers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSupplier e)
            {
                d.AssetSuppliers_Inserted(e);
            }
            private static void __AssetSuppliers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSupplier e)
            {
                d.AssetSuppliers_Updating(e);
            }
            private static void __AssetSuppliers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSupplier e)
            {
                d.AssetSuppliers_Updated(e);
            }
            private static void __AssetSuppliers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSupplier e)
            {
                d.AssetSuppliers_Deleting(e);
            }
            private static void __AssetSuppliers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSupplier e)
            {
                d.AssetSuppliers_Deleted(e);
            }
            private static void __AssetSuppliers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetSupplier e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AssetSuppliers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetSupplier, bool>> __AssetSuppliers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetSupplier, bool>> filter = null;
                d.AssetSuppliers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetType>
                __AssetTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssetType>(
                    "AssetTypes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetTypes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetTypes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetTypes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetTypes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetTypes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetTypes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetTypes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetTypes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetTypes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetTypes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetTypes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssetTypes_Filter);
            private static bool __AssetTypes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetTypes_CanInsert(ref result);
                return result;
            }
            private static bool __AssetTypes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __AssetTypes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetTypes_CanDelete(ref result);
                return result;
            }
            private static bool __AssetTypes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssetTypes_CanRead(ref result);
                return result;
            }
            private static void __AssetTypes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetType e)
            {
                d.AssetTypes_Inserting(e);
            }
            private static void __AssetTypes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetType e)
            {
                d.AssetTypes_Inserted(e);
            }
            private static void __AssetTypes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetType e)
            {
                d.AssetTypes_Updating(e);
            }
            private static void __AssetTypes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetType e)
            {
                d.AssetTypes_Updated(e);
            }
            private static void __AssetTypes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetType e)
            {
                d.AssetTypes_Deleting(e);
            }
            private static void __AssetTypes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetType e)
            {
                d.AssetTypes_Deleted(e);
            }
            private static void __AssetTypes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssetType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AssetTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetType, bool>> __AssetTypes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetType, bool>> filter = null;
                d.AssetTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>
                __EmployeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>(
                    "Employees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Filter);
            private static bool __Employees_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanInsert(ref result);
                return result;
            }
            private static bool __Employees_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanUpdate(ref result);
                return result;
            }
            private static bool __Employees_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanDelete(ref result);
                return result;
            }
            private static bool __Employees_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanRead(ref result);
                return result;
            }
            private static void __Employees_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserting(e);
            }
            private static void __Employees_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserted(e);
            }
            private static void __Employees_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updating(e);
            }
            private static void __Employees_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updated(e);
            }
            private static void __Employees_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleting(e);
            }
            private static void __Employees_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleted(e);
            }
            private static void __Employees_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Employees_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> __Employees_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter = null;
                d.Employees_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ServiceContract>
                __ServiceContractsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ServiceContract>(
                    "ServiceContracts",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContracts_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContracts_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContracts_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContracts_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContracts_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContracts_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContracts_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContracts_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContracts_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContracts_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContracts_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContracts_Filter);
            private static bool __ServiceContracts_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ServiceContracts_CanInsert(ref result);
                return result;
            }
            private static bool __ServiceContracts_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ServiceContracts_CanUpdate(ref result);
                return result;
            }
            private static bool __ServiceContracts_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ServiceContracts_CanDelete(ref result);
                return result;
            }
            private static bool __ServiceContracts_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ServiceContracts_CanRead(ref result);
                return result;
            }
            private static void __ServiceContracts_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContract e)
            {
                d.ServiceContracts_Inserting(e);
            }
            private static void __ServiceContracts_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContract e)
            {
                d.ServiceContracts_Inserted(e);
            }
            private static void __ServiceContracts_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContract e)
            {
                d.ServiceContracts_Updating(e);
            }
            private static void __ServiceContracts_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContract e)
            {
                d.ServiceContracts_Updated(e);
            }
            private static void __ServiceContracts_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContract e)
            {
                d.ServiceContracts_Deleting(e);
            }
            private static void __ServiceContracts_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContract e)
            {
                d.ServiceContracts_Deleted(e);
            }
            private static void __ServiceContracts_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContract e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ServiceContracts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ServiceContract, bool>> __ServiceContracts_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ServiceContract, bool>> filter = null;
                d.ServiceContracts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ServiceContractSupplier>
                __ServiceContractSuppliersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ServiceContractSupplier>(
                    "ServiceContractSuppliers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContractSuppliers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContractSuppliers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContractSuppliers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContractSuppliers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContractSuppliers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContractSuppliers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContractSuppliers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContractSuppliers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContractSuppliers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContractSuppliers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContractSuppliers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ServiceContractSuppliers_Filter);
            private static bool __ServiceContractSuppliers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ServiceContractSuppliers_CanInsert(ref result);
                return result;
            }
            private static bool __ServiceContractSuppliers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ServiceContractSuppliers_CanUpdate(ref result);
                return result;
            }
            private static bool __ServiceContractSuppliers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ServiceContractSuppliers_CanDelete(ref result);
                return result;
            }
            private static bool __ServiceContractSuppliers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ServiceContractSuppliers_CanRead(ref result);
                return result;
            }
            private static void __ServiceContractSuppliers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContractSupplier e)
            {
                d.ServiceContractSuppliers_Inserting(e);
            }
            private static void __ServiceContractSuppliers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContractSupplier e)
            {
                d.ServiceContractSuppliers_Inserted(e);
            }
            private static void __ServiceContractSuppliers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContractSupplier e)
            {
                d.ServiceContractSuppliers_Updating(e);
            }
            private static void __ServiceContractSuppliers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContractSupplier e)
            {
                d.ServiceContractSuppliers_Updated(e);
            }
            private static void __ServiceContractSuppliers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContractSupplier e)
            {
                d.ServiceContractSuppliers_Deleting(e);
            }
            private static void __ServiceContractSuppliers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContractSupplier e)
            {
                d.ServiceContractSuppliers_Deleted(e);
            }
            private static void __ServiceContractSuppliers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ServiceContractSupplier e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ServiceContractSuppliers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ServiceContractSupplier, bool>> __ServiceContractSuppliers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ServiceContractSupplier, bool>> filter = null;
                d.ServiceContractSuppliers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
